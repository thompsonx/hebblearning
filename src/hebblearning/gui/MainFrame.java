/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hebblearning.gui;

import hebblearning.perceptron.Perceptron;
import hebblearning.perceptron.PerceptronTask;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import javax.xml.bind.JAXBException;

/**
 *
 * @author tom
 */
public class MainFrame extends javax.swing.JFrame {
    
    private PerceptronTask ptask = null;
    private File datafile = null;
//    private JTable tWeights;
//    private JTable tTrain;
//    private JTable tTest;
    
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        this.sldLRate.setValue(3);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new javax.swing.JPanel();
        btnOneStep = new javax.swing.JButton();
        btnComplete = new javax.swing.JButton();
        btnLoadXml = new javax.swing.JButton();
        btnSaveXml = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        lblItHead = new javax.swing.JLabel();
        lblIter = new javax.swing.JLabel();
        lblStateHead = new javax.swing.JLabel();
        lblState = new javax.swing.JLabel();
        leftPanel = new javax.swing.JPanel();
        sldLRate = new javax.swing.JSlider();
        lblLRate = new javax.swing.JLabel();
        lblSlider = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblWeights = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTrain = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblTest = new javax.swing.JTable();
        rightPanel = new javax.swing.JPanel();
        plot = new hebblearning.gui.Plot();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnOneStep.setText("One step");
        btnOneStep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOneStepActionPerformed(evt);
            }
        });

        btnComplete.setText("Finish");
        btnComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompleteActionPerformed(evt);
            }
        });

        btnLoadXml.setText("Load XML");
        btnLoadXml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadXmlActionPerformed(evt);
            }
        });

        btnSaveXml.setText("Save XML");
        btnSaveXml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveXmlActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        lblItHead.setText("Iteration:");

        lblIter.setText("0");

        lblStateHead.setText("State:");

        lblState.setForeground(new java.awt.Color(35, 49, 234));
        lblState.setText("Learning");

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addComponent(btnOneStep)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnComplete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReset)
                .addGap(91, 91, 91)
                .addComponent(lblItHead)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblIter, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblStateHead)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblState)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 288, Short.MAX_VALUE)
                .addComponent(btnLoadXml)
                .addGap(9, 9, 9)
                .addComponent(btnSaveXml)
                .addContainerGap())
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnOneStep)
                .addComponent(btnComplete)
                .addComponent(btnLoadXml)
                .addComponent(btnSaveXml)
                .addComponent(btnReset)
                .addComponent(lblItHead)
                .addComponent(lblIter)
                .addComponent(lblStateHead)
                .addComponent(lblState))
        );

        sldLRate.setMaximum(10);
        sldLRate.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldLRateStateChanged(evt);
            }
        });

        lblLRate.setText("Learning rate:");

        lblSlider.setText("0.3");

        tblWeights.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "w(i)", "Weight", "Input", "Min", "Max"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblWeights);

        tblTrain.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Input 1", "Input 2", "y_e", "y_c"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblTrain);

        tblTest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Input 1", "Input 2", "y_c"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblTest);

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sldLRate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(leftPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(leftPanelLayout.createSequentialGroup()
                                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(leftPanelLayout.createSequentialGroup()
                                            .addComponent(lblLRate)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblSlider))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLRate)
                    .addComponent(lblSlider))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sldLRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        rightPanel.setBorder(null);

        javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(rightPanel);
        rightPanel.setLayout(rightPanelLayout);
        rightPanelLayout.setHorizontalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addComponent(plot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        rightPanelLayout.setVerticalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(plot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(topPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(leftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoadXmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadXmlActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File(System.getProperty("user.dir")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("XML file", "xml", "xml");
        chooser.setFileFilter(filter);
        int result = chooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            this.datafile = chooser.getSelectedFile();
            try {
                this.ptask = PerceptronTask.loadFromXML(this.datafile);
                this.plot.setPerceptronTask(ptask);
                this.sldLRate.setValue((int)(this.ptask.getPerceptron().getLerningRate()*10));
                this.fillTables(ptask);
//                this.createWeightTable(ptask);
            } catch (JAXBException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnLoadXmlActionPerformed

    private void fillTables(PerceptronTask pt)
    {
        Perceptron ptron = ptask.getPerceptron();
        
        DefaultTableModel tm = (DefaultTableModel) this.tblWeights.getModel();
        
        tm.addRow(new Object[] { "w0", ptron.getWeights()[0], ""});
        for (int i = 1; i < ptron.getWeights().length; i++)
        {
            Object[] w = { 
                "w" + Integer.toString(i),
                ptron.getWeights()[i],
                ptron.getInputDescriptions()[i-1].getName(),
                ptron.getInputDescriptions()[i-1].getMinimum(),
                ptron.getInputDescriptions()[i-1].getMaximum()
            };
            tm.addRow(w);
        }
        
        if (ptron.getInputDescriptions().length > 2)
            return;
    }
    
//    private void createWeightTable(PerceptronTask pt)
//    {
//        this.paneW.removeAll();
//        String[] columns = { "w(i)", "Weight", "Input", "Min", "Max" };
//        Object[][] data = new Object[pt.getPerceptron().getWeights().length][];
//        Object[] w0 = { "w0", pt.getPerceptron().getWeights()[0], "", "", 0, 0 };
//        data[0] = w0;
//        for (int i = 1; i < pt.getPerceptron().getWeights().length; i++)
//        {
//            Object[] w = { 
//                "w" + Integer.toString(i),
//                pt.getPerceptron().getWeights()[i],
//                pt.getPerceptron().getInputDescriptions()[i-1].getName(),
//                pt.getPerceptron().getInputDescriptions()[i-1].getMinimum(),
//                pt.getPerceptron().getInputDescriptions()[i-1].getMaximum()
//                
//            };
//            data[i] = w;
//        }
//        this.tWeights = new JTable(data, columns);
//        this.paneW.add(tWeights);
//    }
//    
    
    private void btnSaveXmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveXmlActionPerformed
        if (this.ptask == null)
            return;
        
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("XML file", "xml", "xml");
        chooser.setFileFilter(filter);
        int result = chooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File input = chooser.getSelectedFile();
            try {
                this.ptask.storeToXML(input);
            } catch (JAXBException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.lblState.setText("Learning");
            this.lblIter.setText("0");
        }
    }//GEN-LAST:event_btnSaveXmlActionPerformed

    private void btnOneStepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOneStepActionPerformed
        if (this.ptask == null)
            return;
        
        if (!this.ptask.learn())
        {
            this.lblState.setText("LEARNED");
        }
        this.lblIter.setText(Integer.toString(this.ptask.getIteration()));
        this.repaint();
    }//GEN-LAST:event_btnOneStepActionPerformed

    private void btnCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompleteActionPerformed
        if (this.ptask == null)
            return;
        
        while(this.ptask.learn());
        this.lblIter.setText(Integer.toString(this.ptask.getIteration()));
        this.lblState.setText("LEARNED");
        this.repaint();
    }//GEN-LAST:event_btnCompleteActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        try {
            this.ptask = PerceptronTask.loadFromXML(this.datafile);
            this.plot.setPerceptronTask(ptask);
        } catch (JAXBException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.lblState.setText("Learning");
        this.lblIter.setText("0");
    }//GEN-LAST:event_btnResetActionPerformed

    private void sldLRateStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldLRateStateChanged
        double value = (double)this.sldLRate.getValue()/10.0;
        this.lblSlider.setText(Double.toString(value));
        if (this.ptask == null)
            return;
        this.ptask.getPerceptron().setLerningRate(value);
    }//GEN-LAST:event_sldLRateStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnComplete;
    private javax.swing.JButton btnLoadXml;
    private javax.swing.JButton btnOneStep;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSaveXml;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblItHead;
    private javax.swing.JLabel lblIter;
    private javax.swing.JLabel lblLRate;
    private javax.swing.JLabel lblSlider;
    private javax.swing.JLabel lblState;
    private javax.swing.JLabel lblStateHead;
    private javax.swing.JPanel leftPanel;
    private hebblearning.gui.Plot plot;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JSlider sldLRate;
    private javax.swing.JTable tblTest;
    private javax.swing.JTable tblTrain;
    private javax.swing.JTable tblWeights;
    private javax.swing.JPanel topPanel;
    // End of variables declaration//GEN-END:variables
}
